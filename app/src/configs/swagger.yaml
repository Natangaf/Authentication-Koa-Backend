openapi: 3.0.3
info:
  title: AWS Cognito API
  description: API para autenticação e gerenciamento de usuários integrada com AWS Cognito
  version: 1.0.0

servers:
  - url: http://localhost:3000
    description: Servidor local

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
          format: email
        role:
          type: string
          enum: [Admin, User]
        isOnboarded:
          type: boolean
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        deletedAt:
          type: string
          format: date-time
          nullable: true

    AuthRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
          example: user@example.com
        password:
          type: string
          format: password
          example: Strong@Password123

paths:
  /auth:
    post:
      tags:
        - Autenticação
      summary: Login ou registro de usuário
      description: Rota pública para autenticação (signIn/signUp)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthRequest'
      responses:
        '200':
          description: Token JWT gerado
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: "eyJraWQiOiJRd0tzb0NoQk9hU21VejNpMHlxK3JIR1pKalBkdUlaZlwvMGllc0xTaDB4UT0i..."

  /me:
    get:
      tags:
        - Usuário
      summary: Obter informações do usuário autenticado
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Dados do usuário
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /edit-account/{id}:
    put:
      tags:
        - Usuário
      summary: Editar informações da conta
      description: |
        - Admin pode alterar nome e role
        - Usuário comum só pode alterar nome
        - Atualiza isOnboarded para true
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Novo Nome
                role:
                  type: string
                  enum: [Admin, User]
      responses:
        '200':
          description: Usuário atualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /users:
    get:
      tags:
        - Administração
      summary: Listar todos os usuários (apenas Admin)
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Lista de usuários
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'